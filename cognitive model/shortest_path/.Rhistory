xy <- c(0.50433,0.653,0.5,1,0,0.33,0.6,0.6975,0.37175,0.730142857,0.5933,0.83767,0.8478,0.256,0.8672,0.596)
xz <- c(0.33,0.4,0.7385,1,0.17033,0.174,0.6992,0.721833,0.57975,0.785857143,0.721833,0.80422,0.8,0.241,0.9,0.8)
yz <- c(0.67,0.8,0.7475,0.7095,0.44733,0.16067,0.6952,0.715167,0.57925,0.799285714,0.72567,0.76922,0.831,0.2545,0.4968,0.5942)
xyz <- c(0.33,0.8,0.5,1,0,0.33,0.6952,0.7267,0.38125,0.786,0.718833,0.81533,0.8,0.235,0.4964,0.8)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=3, ylim=c(0,1.2), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data, average edit distance for dimensions",
xlab='Video', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:16, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=3, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=20)
lines(xdata, xz, col=col[5], lty=2, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=19)
lines(xdata, yz, col=col[6], lty=3, lwd=2)
# Plot yz
points(xdata, xyz, col=col[7], pch=15)
lines(xdata, xyz, col=col[7], lty=3, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:8, ncol=4, byrow=TRUE)
legend(1,1.23, c('x','y','z','xy','xz','yz','xyz')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7])[legend_order],
pch=c(15,16,17,18,20,19,15)[legend_order], lty=c(3,1,1,3,2,3,3)[legend_order], ncol=4, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
model_ck <- c(0.33,0.8,0.25,0.5,0,0,0.6,0.67,0.25,0.71,0.33,0.44,0.8,0,0.6,0.8)
k_set <- c(0.33,0.8,0.25,0.5,0,0.33,0.6,0.67,0.25,0.86,0.50,0.44,0.8,0,0.4,0.8)
c_set <- c(0.67,0.8,0.25,0.5,0,0,0.6,0.83,0.5,0.71,0.33,0.78,0.8,0.5,0.6,0.8)
no_params <- c(0.67,0.8,0.5,0.75,0,0.67,0.6,0.83,0.5,0.71,0.33,0.56,0.8,0.5,0.4,0.8)
avg <- c(0.44,0.666,0.605,0.605,0.44,0.44,0.666,0.723,0.605,0.756,0.723,0.806,0.666,0.25,0.666,0.666)
col = brewer.pal(n=6,name='Set1')
# Plot model, c+k set
plot(xdata, model_ck, type='o', col=col[1], pch=15, lty=3, ylim=c(0,1.0), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:16, labels=xdata, cex.axis=1)
# Plot model without c
points(xdata, k_set, col=col[2], pch=16)
lines(xdata, k_set, col=col[2], lty=1, lwd=2)
# Plot model without k
points(xdata, c_set, col=col[3], pch=17)
lines(xdata, c_set, col=col[3], lty=1, lwd=2)
# Plot greedy without params
points(xdata, no_params, col=col[4], pch=18)
lines(xdata, no_params, col=col[4], lty=3, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=20)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot model
points(xdata, model_ck, col=col[1], pch=15)
lines(xdata, model_ck, col=col[1], lty=3, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
legend(2,1.03, c('c+k set', 'k set', 'c set', 'no parameters set','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],'black')[legend_order],
pch=c(15,16,17,18,20)[legend_order], lty=c(3,1,1,3,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
x <- c(0,0.6458,0.769,1,0.16433,0.16833,0.7158,0.7245,0.6125,0.752714286,0.72833,0.7944,0.6734,0.2525,0.8686,0.6866)
y <- c(0.502,0.8,0.5,1,0.33533,0.50133,0.4648,0.700167,0.37,0.797428571,0.554167,0.84967,0.8526,0.2485,0.9054,0.5844)
z <- c(0.667,0.8,0.753,0.703,0.44633,0.167,0.7008,0.728167,0.57875,0.805714286,0.729833,0.76822,0.8356,0.2805,0.9044,0.6016)
xy <- c(0.50433,0.653,0.5,1,0,0.33,0.6,0.6975,0.37175,0.730142857,0.5933,0.83767,0.8478,0.256,0.8672,0.596)
xz <- c(0.33,0.4,0.7385,1,0.17033,0.174,0.6992,0.721833,0.57975,0.785857143,0.721833,0.80422,0.8,0.241,0.9,0.8)
yz <- c(0.67,0.8,0.7475,0.7095,0.44733,0.16067,0.6952,0.715167,0.57925,0.799285714,0.72567,0.76922,0.831,0.2545,0.4968,0.5942)
xyz <- c(0.33,0.8,0.5,1,0,0.33,0.6952,0.7267,0.38125,0.786,0.718833,0.81533,0.8,0.235,0.4964,0.8)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=3, ylim=c(0,1.2), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data, average edit distance for dimensions",
xlab='Video', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:16, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=3, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=20)
lines(xdata, xz, col=col[5], lty=2, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=19)
lines(xdata, yz, col=col[6], lty=3, lwd=2)
# Plot yz
points(xdata, xyz, col=col[7], pch=15)
lines(xdata, xyz, col=col[7], lty=3, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:8, ncol=4, byrow=TRUE)
legend(1,1.23, c('x','y','z','xy','xz','yz','xyz')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7])[legend_order],
pch=c(15,16,17,18,20,19,15)[legend_order], lty=c(3,1,1,3,2,3,3)[legend_order], ncol=4, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7)
avg <- c(0.446378670634921,0.447737202380952,0.471661656746032,0.420670386904762,0.46237683531746,0.441768204365079,
0.424001041666667)
median <- c(0.7012,0.569283333333333,0.714483333333333,0.598,0.721833333333333,0.6447,0.707016666666667)
col = brewer.pal(n=6,name='Set1')
# Plot avg
plot(xdata, avg, type='o', col=col[1], pch=15, lty=3, ylim=c(0,1.0), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data",
xlab='Dimensions', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:7, labels=c('x','y','z','xy','xz','yz','xyz'), cex.axis=1)
# Plot median
points(xdata, median, col=col[2], pch=16)
lines(xdata, median, col=col[2], lty=1, lwd=2)
# Plot model without k
#points(xdata, c_set, col=col[3], pch=17)
#lines(xdata, c_set, col=col[3], lty=1, lwd=2)
# Plot greedy without params
#points(xdata, no_params, col=col[4], pch=18)
#lines(xdata, no_params, col=col[4], lty=3, lwd=2)
# Plot avg/baseline
#points(xdata, avg, col='black', pch=20)
#lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot model
#points(xdata, model_ck, col=col[1], pch=15)
#lines(xdata, model_ck, col=col[1], lty=3, lwd=2)
legend(1,1.03, c('avg', 'median'),col=c(col[1],col[2]),pch=c(15,16),lty=c(3,1))
# Plot legend in 3 columns
#legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
#legend(1,1.03, c('avg', 'mean')[legend_order],
#       col=c(col[1],col[2])[legend_order],
#       pch=c(15,16)[legend_order], lty=c(3,1)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7)
avg <- c(0.446378670634921,0.447737202380952,0.471661656746032,0.420670386904762,0.46237683531746,0.441768204365079,
0.424001041666667)
median <- c(0.7012,0.569283333333333,0.714483333333333,0.598,0.721833333333333,0.6447,0.707016666666667)
baseline <- c(0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875)
col = brewer.pal(n=6,name='Set1')
# Plot avg
plot(xdata, avg, type='o', col=col[1], pch=15, lty=3, ylim=c(0,1.0), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data",
xlab='Dimensions', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:7, labels=c('x','y','z','xy','xz','yz','xyz'), cex.axis=1)
# Plot median
points(xdata, median, col=col[2], pch=16)
lines(xdata, median, col=col[2], lty=1, lwd=2)
# Plot model without k
#points(xdata, c_set, col=col[3], pch=17)
#lines(xdata, c_set, col=col[3], lty=1, lwd=2)
# Plot greedy without params
#points(xdata, no_params, col=col[4], pch=18)
#lines(xdata, no_params, col=col[4], lty=3, lwd=2)
# Plot avg/baseline
points(xdata, baseline, col='black', pch=20)
lines(xdata, baseline, col='black', lty=2, lwd=2)
# Plot model
#points(xdata, model_ck, col=col[1], pch=15)
#lines(xdata, model_ck, col=col[1], lty=3, lwd=2)
legend(1,1.03, c('avg', 'median'),col=c(col[1],col[2]),pch=c(15,16),lty=c(3,1))
# Plot legend in 3 columns
#legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
#legend(1,1.03, c('avg', 'mean')[legend_order],
#       col=c(col[1],col[2])[legend_order],
#       pch=c(15,16)[legend_order], lty=c(3,1)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7)
avg <- c(0.446378670634921,0.447737202380952,0.471661656746032,0.420670386904762,0.46237683531746,0.441768204365079,
0.424001041666667)
median <- c(0.7012,0.569283333333333,0.714483333333333,0.598,0.721833333333333,0.6447,0.707016666666667)
baseline_avg <- c(0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875)
baseline_median <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=6,name='Set1')
# Plot avg
plot(xdata, avg, type='o', col=col[1], pch=15, lty=1, ylim=c(0,1.0), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data",
xlab='Dimensions', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:7, labels=c('x','y','z','xy','xz','yz','xyz'), cex.axis=1)
# Plot median
points(xdata, median, col=col[2], pch=16)
lines(xdata, median, col=col[2], lty=1, lwd=2)
# Plot model without k
#points(xdata, c_set, col=col[3], pch=17)
#lines(xdata, c_set, col=col[3], lty=1, lwd=2)
# Plot greedy without params
#points(xdata, no_params, col=col[4], pch=18)
#lines(xdata, no_params, col=col[4], lty=3, lwd=2)
# Plot avg/baseline avg
points(xdata, baseline_avg, col='black', pch=20)
lines(xdata, baseline_avg, col='black', lty=2, lwd=2)
# Plot avg/baseline median
points(xdata, baseline_avg, col=col[3], pch=20)
lines(xdata, baseline_avg, col=col[3], lty=2, lwd=2)
# Plot model
#points(xdata, model_ck, col=col[1], pch=15)
#lines(xdata, model_ck, col=col[1], lty=3, lwd=2)
legend(1,1.03, c('avg', 'median','baseline avg','baseline median'),col=c(col[1],col[2],'black',col[3]),pch=c(15,16,20,20),
lty=c(1,1,2,2))
# Plot legend in 3 columns
#legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
#legend(1,1.03, c('avg', 'mean')[legend_order],
#       col=c(col[1],col[2])[legend_order],
#       pch=c(15,16)[legend_order], lty=c(3,1)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7)
avg <- c(0.446378670634921,0.447737202380952,0.471661656746032,0.420670386904762,0.46237683531746,0.441768204365079,
0.424001041666667)
median <- c(0.7012,0.569283333333333,0.714483333333333,0.598,0.721833333333333,0.6447,0.707016666666667)
baseline_avg <- c(0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875,0.6076875)
baseline_median <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=6,name='Set1')
# Plot avg
plot(xdata, avg, type='o', col=col[1], pch=15, lty=1, ylim=c(0,1.0), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="EPIC data",
xlab='Dimensions', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:7, labels=c('x','y','z','xy','xz','yz','xyz'), cex.axis=1)
# Plot median
points(xdata, median, col=col[2], pch=16)
lines(xdata, median, col=col[2], lty=1, lwd=2)
# Plot model without k
#points(xdata, c_set, col=col[3], pch=17)
#lines(xdata, c_set, col=col[3], lty=1, lwd=2)
# Plot greedy without params
#points(xdata, no_params, col=col[4], pch=18)
#lines(xdata, no_params, col=col[4], lty=3, lwd=2)
# Plot avg/baseline avg
points(xdata, baseline_avg, col='black', pch=20)
lines(xdata, baseline_avg, col='black', lty=2, lwd=2)
# Plot avg/baseline median
points(xdata, baseline_median, col=col[3], pch=20)
lines(xdata, baseline_median, col=col[3], lty=2, lwd=2)
# Plot model
#points(xdata, model_ck, col=col[1], pch=15)
#lines(xdata, model_ck, col=col[1], lty=3, lwd=2)
legend(1,1.03, c('avg', 'median','baseline avg','baseline median'),col=c(col[1],col[2],'black',col[3]),pch=c(15,16,20,20),
lty=c(1,1,2,2))
# Plot legend in 3 columns
#legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
#legend(1,1.03, c('avg', 'mean')[legend_order],
#       col=c(col[1],col[2])[legend_order],
#       pch=c(15,16)[legend_order], lty=c(3,1)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=6,name='Set1')
# Plot x
plot(xdata, model_ck, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, k_set, col=col[2], pch=16)
lines(xdata, k_set, col=col[2], lty=3, lwd=2)
# Plot z
points(xdata, c_set, col=col[3], pch=17)
lines(xdata, c_set, col=col[3], lty=2, lwd=2)
# Plot xy
points(xdata, no_params, col=col[4], pch=18)
lines(xdata, no_params, col=col[4], lty=2, lwd=2)
# Plot xz
#points(xdata, globally_optimal, col=col[5], pch=21)
#lines(xdata, globally_optimal, col=col[5], lty=2, lwd=2)
# Plot yz
#points(xdata, globally_optimal, col=col[5], pch=21)
#lines(xdata, globally_optimal, col=col[5], lty=2, lwd=2)
# Plot xyz
#points(xdata, globally_optimal, col=col[5], pch=21)
#lines(xdata, globally_optimal, col=col[5], lty=2, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=20)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot model again for visibility
points(xdata, model_ck, col=col[1], pch=15)
lines(xdata, model_ck, col=col[1], lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
legend(2,0.83, c('c+k set','k set','c set','no parameters set','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],'black',col[5])[legend_order],
pch=c(15,16,17,18,20)[legend_order], lty=c(1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=1, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=19)
lines(xdata, xz, col=col[5], lty=1, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=20)
lines(xdata, yz, col=col[6], lty=1, lwd=2)
# Plot xyz
points(xdata, xyz, col=col[7], pch=21)
lines(xdata, xyz, col=col[7], lty=1, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=22)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
legend(2,0.83, c('x','y','z','xy','xz','yz','xyz','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],'black',col[5])[legend_order],
pch=c(15,16,17,18,20)[legend_order], lty=c(1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=1, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=19)
lines(xdata, xz, col=col[5], lty=1, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=20)
lines(xdata, yz, col=col[6], lty=1, lwd=2)
# Plot xyz
points(xdata, xyz, col=col[7], pch=21)
lines(xdata, xyz, col=col[7], lty=1, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=22)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:6, ncol=3, byrow=TRUE)
legend(2,0.83, c('x','y','z','xy','xz','yz','xyz','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7],'black')[legend_order],
pch=c(15,16,17,18,19,20,21,22)[legend_order], lty=c(1,1,1,1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=1, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=19)
lines(xdata, xz, col=col[5], lty=1, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=20)
lines(xdata, yz, col=col[6], lty=1, lwd=2)
# Plot xyz
points(xdata, xyz, col=col[7], pch=21)
lines(xdata, xyz, col=col[7], lty=1, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=22)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:9, ncol=3, byrow=TRUE)
legend(2,0.83, c('x','y','z','xy','xz','yz','xyz','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7],'black')[legend_order],
pch=c(15,16,17,18,19,20,21,22)[legend_order], lty=c(1,1,1,1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=1, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=19)
lines(xdata, xz, col=col[5], lty=1, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=20)
lines(xdata, yz, col=col[6], lty=1, lwd=2)
# Plot xyz
points(xdata, xyz, col=col[7], pch=21)
lines(xdata, xyz, col=col[7], lty=1, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=22)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:9, ncol=3, byrow=TRUE)
legend(1,0.83, c('x','y','z','xy','xz','yz','xyz','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7],'black')[legend_order],
pch=c(15,16,17,18,19,20,21,22)[legend_order], lty=c(1,1,1,1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
library(RColorBrewer)
# Define data (x: videos, y: fit of model, edit distance with Damerau-Levenshtein)
xdata <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)
x <- c(0.2,0.2,0,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0,0.2,0.21,0.21,0.2,0.2,0,4,0.4)
y <- c(0.48,0.48,0,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0,0.48,0.58,0.58,0.48,0.48,0.26,0.26)
z <- c(0.47,0.47,0.33,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.33,0.47,0.53,0.53,0.47,0.47,0.27,0.27)
xy <- c(0.3,0.3,0,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0.3,0,0.3,0.1,0.1,0.3,0.3,0.5,0.5)
xz <- c(0.31,0.31,0,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0.31,0,0.31,0.5,0.5,0.31,0.31,0.1,0.1)
yz <- c(0.47,0.47,0,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0.47,0,0.47,0.53,0.53,0.47,0.47,0.28,0.28)
xyz <- c(0.1,0.1,0,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0,0.1,0.5,0.5,0.1,0.1,0.1,0.1)
avg <- c(0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666,0.666)
col = brewer.pal(n=7,name='Set1')
# Plot x
plot(xdata, x, type='o', col=col[1], pch=15, lty=1, ylim=c(0,0.8), lwd=2,
ylab='Normalized Damerau-Levenshtein distance', main="TUM, 3D model",
xlab='Video sequence', las=1, xaxt='n', cex.lab=1.4)
axis(side=1, at=1:19, labels=xdata, cex.axis=1)
# Plot y
points(xdata, y, col=col[2], pch=16)
lines(xdata, y, col=col[2], lty=1, lwd=2)
# Plot z
points(xdata, z, col=col[3], pch=17)
lines(xdata, z, col=col[3], lty=1, lwd=2)
# Plot xy
points(xdata, xy, col=col[4], pch=18)
lines(xdata, xy, col=col[4], lty=1, lwd=2)
# Plot xz
points(xdata, xz, col=col[5], pch=19)
lines(xdata, xz, col=col[5], lty=1, lwd=2)
# Plot yz
points(xdata, yz, col=col[6], pch=20)
lines(xdata, yz, col=col[6], lty=1, lwd=2)
# Plot xyz
points(xdata, xyz, col=col[7], pch=21)
lines(xdata, xyz, col=col[7], lty=1, lwd=2)
# Plot avg/baseline
points(xdata, avg, col='black', pch=22)
lines(xdata, avg, col='black', lty=2, lwd=2)
# Plot legend in 3 columns
legend_order <- matrix(1:9, ncol=3, byrow=TRUE)
legend(1,0.83, c('x','y','z','xy','xz','yz','xyz','mean edit distance')[legend_order],
col=c(col[1],col[2],col[3],col[4],col[5],col[6],col[7],'black')[legend_order],
pch=c(15,16,17,18,19,20,21,22)[legend_order], lty=c(1,1,1,1,1,1,1,2)[legend_order], ncol=3, cex=1.2)
